{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/components/index.js","webpack:///./src/App.vue","webpack:///src/App.vue","webpack:///./src/App.vue?03b3","webpack:///./src/App.vue?315a","webpack:///./src/main.js","webpack:///./src/components/McFontpicker.vue?6248","webpack:///./src/App.vue?6b89","webpack:///./src/components/McFontpicker.vue","webpack:///src/components/McFontpicker.vue","webpack:///./src/components/McFontpicker.vue?64ff","webpack:///./src/components/McFontpicker.vue?d7bd"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","install","Vue","installed","component","McFontpicker","plugin","GlobalVue","global","vue","use","render","_vm","this","_c","_self","attrs","_v","_m","staticClass","model","font1","callback","$$v","expression","style","_s","pre","on","fontVariants","ref","font2","manuallyLoadFonts1","staticStyle","$event","font3","thinnestFont","v","font","variants","fontFamily","fontWeight","weight","_e","manuallyLoadFonts2","directives","rawName","fontCategories","$$selectedVal","Array","filter","target","options","selected","map","val","_value","multiple","domProps","italic","manuallyAddFontValue","staticRenderFns","components","config","productionTip","h","App","$mount","loaderOnly","class","outerClasses","searchContent","searchChanged","onFocus","hide","onKeyDown","previewClasses","popoutClasses","cancelBlur","_l","matchingFonts","sane","selectedFontIndex","e","onClick","mousemove","noMatches","props","type","String","default","autoLoad","Boolean","loadAllVariants","loadFonts","googleFonts","localFonts","focused","allGoogleFonts","typedSearch","current","watch","newValue","handleNewValue","handleLoadFont","computed","ret","fonts","activeFonts","activeFontsInCategory","fontNames","split","toLowerCase","a","includes","cased","replaceAll","trim","category","search","mounted","ifonts","methods","preventDefault","setCurrentByName","loadFontByName","$refs","scrollTop","isLonger","matches","startsWith","firstMatch","setInputSelection","input","startPos","endPos","setSelectionRange","createTextRange","range","collapse","moveEnd","moveStart","select","preciseMatches","setCurrent","showSelectedFont","why","selectedFont","querySelector","fontTop","offsetTop","fontBottom","offsetHeight","popTop","popBottom","clientHeight","show","setTimeout","getFontByName","$emit","blur","autoLoadFont","emitFontVariants","newName","prev","substring","loadFontFromObject","origFont","console","error","getFourVariants","regularWeights","parseInt","sort","b","italicWeights","fourFonts","regular","Math","abs","bold","boldItalic","cssId","cssIdAll","join","existing","document","getElementById","existingAll","link","createElement","rel","id","href","getElementsByTagName","appendChild"],"mappings":"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","file":"js/app.8271d49e.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/vue-fontpicker/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import McFontpicker from './McFontpicker.vue'\n\nfunction install(Vue) {\n  if (install.installed) return\n  install.installed = true\n  Vue.component('McFontpicker', McFontpicker)\n}\n\nconst plugin = {\n  install,\n}\n\nlet GlobalVue = null\nif (typeof window !== 'undefined') {\n  GlobalVue = window.Vue\n} else if (typeof global !== 'undefined') {\n  GlobalVue = global.vue\n}\nif (GlobalVue) {\n  GlobalVue.use(plugin)\n}\n\nMcFontpicker.install = install\n\nexport default McFontpicker\n","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{attrs:{\"id\":\"app\"}},[_c('h1',[_vm._v(\"Simple google font picker\")]),_c('p',[_vm._v(\" This is a live demo showing how to use @mikk3lro/mc-fontpicker for Vue.js. \")]),_vm._m(0),_vm._m(1),_c('h3',{attrs:{\"id\":\"default\"}},[_vm._v(\"Default behaviour\")]),_vm._m(2),_c('div',{staticClass:\"example\"},[_c('McFontpicker',{model:{value:(_vm.font1),callback:function ($$v) {_vm.font1=$$v},expression:\"font1\"}})],1),_c('p',[_vm._v(\" Current value: \"),_c('span',{style:('font-family: ' + _vm.font1)},[_vm._v(_vm._s(_vm.font1))])]),_c('pre',{pre:true},[_vm._v(\"<McFontpicker v-model=\\\"font1\\\" />\\nCurrent value: <span :style=\\\"'font-family: ' + font1\\\">{{ font1 }}</span>\\n\")]),_c('h3',{attrs:{\"id\":\"fontVariants\"}},[_vm._v(\"Font variants\")]),_vm._m(3),_c('div',{staticClass:\"example\"},[_c('McFontpicker',{attrs:{\"value\":\"Oranienbaum\"},on:{\"fontVariants\":i => (_vm.fontVariants = i)}})],1),_c('p',[_vm._v(\"fontVariants:\")]),_c('pre',[_vm._v(_vm._s(_vm.fontVariants))]),_c('pre',{pre:true},[_vm._v(\"<McFontpicker @fontVariants=\\\"i => (fontVariants = i)\\\" />\\nfontVariants: <pre>{{ fontVariants }}</pre>\\n\")]),_c('h3',{attrs:{\"id\":\"nomatches\"}},[_vm._v(\"No matches\")]),_vm._m(4),_c('div',{staticClass:\"example\"},[_c('McFontpicker',{ref:\"fontloader\",attrs:{\"no-matches\":\"I've got nothing\"}})],1),_c('pre',[_vm._v(\"<McFontpicker no-matches=\\\"I've got nothing\\\" />\")]),_c('h3',{attrs:{\"id\":\"autoload\"}},[_vm._v(\"Autoload fonts\")]),_vm._m(5),_c('div',{staticClass:\"example\"},[_c('McFontpicker',{attrs:{\"auto-load\":\"\"},model:{value:(_vm.font2),callback:function ($$v) {_vm.font2=$$v},expression:\"font2\"}})],1),_c('p',[_vm._v(\" Current value: \"),_c('span',{style:('font-family: ' + _vm.font2)},[_vm._v(_vm._s(_vm.font2))])]),_c('pre',{pre:true},[_vm._v(\"<McFontpicker auto-load v-model=\\\"font2\\\" />\\nCurrent value: <span :style=\\\"'font-family: ' + font2\\\">{{ font2 }}</span>\\n\")]),_c('h3',{attrs:{\"id\":\"manualload\"}},[_vm._v(\"Manually load fonts\")]),_vm._m(6),_c('p',[_vm._v(\"Several fonts may be loaded by comma-separating the names.\")]),_c('div',{staticClass:\"example\"},[_c('McFontpicker',{attrs:{\"load-fonts\":_vm.manuallyLoadFonts1}}),_c('div',{staticStyle:{\"text-align\":\"center\"}},[_c('button',{on:{\"click\":function($event){_vm.manuallyLoadFonts1 = 'Rubik Beastly'}}},[_vm._v(\" Load \"),_c('span',{staticStyle:{\"font-family\":\"Rubik Beastly\"}},[_vm._v(\"\\\"Rubik Beastly\\\"\")])]),_c('button',{on:{\"click\":function($event){_vm.manuallyLoadFonts1 = 'Pacifico, Teko'}}},[_vm._v(\" Load \"),_c('span',{staticStyle:{\"font-family\":\"Pacifico\"}},[_vm._v(\"\\\"Pacifico\\\"\")]),_vm._v(\" and \"),_c('span',{staticStyle:{\"font-family\":\"Teko\"}},[_vm._v(\"\\\"Teko\\\"\")])])])],1),_c('pre',[_vm._v(\"<McFontpicker :load-fonts=\\\"manuallyLoadFonts1\\\" />\\n<button @click=\\\"manuallyLoadFonts1 = 'Rubik Beastly'\\\">One font</button>\\n<button @click=\\\"manuallyLoadFonts1 = 'Pacifico, Teko'\\\">Two fonts</button>\\n\")]),_c('h3',{attrs:{\"id\":\"loadallvariants\"}},[_vm._v(\"Load all variants\")]),_vm._m(7),_c('div',{staticClass:\"example\"},[_c('McFontpicker',{attrs:{\"auto-load\":\"\",\"load-all-variants\":\"\"},model:{value:(_vm.font3),callback:function ($$v) {_vm.font3=$$v},expression:\"font3\"}})],1),_c('p',[_vm._v(\" Current value: \"),_c('span',{style:('font-family: ' + _vm.font3)},[_vm._v(_vm._s(_vm.font3))])]),_c('pre',{pre:true},[_vm._v(\"<McFontpicker auto-load load-all-variants v-model=\\\"font3\\\" />\\nCurrent value: <span :style=\\\"'font-family: ' + font3\\\">{{ font3 }}</span>\\n\")]),_c('h3',{attrs:{\"id\":\"loadspecific\"}},[_vm._v(\"Load specific variants\")]),_vm._m(8),_c('pre',[_vm._v(\"[\\n  {\\n    font: \\\"Open Sans\\\",\\n    variants: [\\n      { italic: false, weight: 400 },\\n      { italic: true, weight: 400 },\\n      { italic: false, weight: 700 },\\n      { italic: true, weight: 700 },\\n    ]\\n  },\\n  {\\n    font: \\\"Rancho\\\",\\n    variants: [\\n      { italic: false, weight: 400 },\\n    ]\\n  }\\n]\")]),_vm._m(9),_c('p',[_vm._v(\" One use case could be loading only one variant - in this example whichever is first (least bold): \")]),_c('div',{staticClass:\"example\"},[_c('McFontpicker',{attrs:{\"load-fonts\":[_vm.thinnestFont]},on:{\"fontVariants\":v =>\n            (_vm.thinnestFont = {\n              font: v.font,\n              variants: v.variants.slice(0, 1),\n            })}})],1),(typeof _vm.thinnestFont == 'object')?_c('p',[_vm._v(\" Current value: \"),_c('span',{style:({\n          fontFamily: _vm.thinnestFont.font,\n          fontWeight: _vm.thinnestFont.variants[0].weight,\n        })},[_vm._v(\" \"+_vm._s(_vm.thinnestFont.font)+\" \")])]):_vm._e(),_c('pre',{pre:true},[_vm._v(\"<McFontpicker\\n  :load-fonts=\\\"[thinnestFont]\\\"\\n  @fontVariants=\\\"\\n    v => (thinnestFont = {\\n      font: v.font,\\n      variants: v.variants.slice(0, 1),\\n    })\\n  \\\"\\n/>\\nCurrent value:\\n<span\\n  :style=\\\"{\\n    fontFamily: thinnestFont.font,\\n    fontWeight: thinnestFont.variants[0].weight,\\n  }\\\"\\n>\\n  {{ thinnestFont.font }}\\n</span>\\n\")]),_c('h3',{attrs:{\"id\":\"loaderonly\"}},[_vm._v(\"Font loader only\")]),_vm._m(10),_c('div',{staticClass:\"example\"},[_c('McFontpicker',{attrs:{\"load-fonts\":_vm.manuallyLoadFonts2,\"loader-only\":\"\"}}),_c('div',{staticStyle:{\"text-align\":\"center\"}},[_c('button',{on:{\"click\":function($event){_vm.manuallyLoadFonts1 = 'Rancho'}}},[_vm._v(\" Load \"),_c('span',{staticStyle:{\"font-family\":\"Rancho\"}},[_vm._v(\"\\\"Rancho\\\"\")])]),_c('button',{on:{\"click\":function($event){_vm.manuallyLoadFonts1 = 'Smooch, Risque'}}},[_vm._v(\" Load \"),_c('span',{staticStyle:{\"font-family\":\"Smooch\"}},[_vm._v(\"\\\"Smooch\\\"\")]),_vm._v(\" and \"),_c('span',{staticStyle:{\"font-family\":\"Risque\"}},[_vm._v(\"\\\"Risque\\\"\")])])])],1),_c('pre',[_vm._v(\"<McFontpicker :load-fonts=\\\"manuallyLoadFonts2\\\" loader-only />\\n<button @click=\\\"manuallyLoadFonts2 = 'Rancho'\\\">Rancho</button>\\n<button @click=\\\"manuallyLoadFonts2 = 'Smooch, Risque'\\\">Two fonts</button>\\n\")]),_c('h3',{attrs:{\"id\":\"choosegooglefonts\"}},[_vm._v(\"Choose google fonts\")]),_vm._m(11),_c('p',[_vm._v(\"You can supply font names as an array or as a comma-seperated string.\")]),_c('p',[_vm._v(\" Do note that the previews are crazy inefficient if you only use a few fonts - in that case you are probably better off recompiling all previews - which is beyond the scope of this document at the moment. \")]),_c('div',{staticClass:\"example\"},[_c('McFontpicker',{attrs:{\"google-fonts\":['Tinos', 'Open Sans']}})],1),_c('pre',[_vm._v(\"<McFontpicker :google-fonts=\\\"['Tinos', 'Open Sans']\\\" />\")]),_c('h3',{attrs:{\"id\":\"fontcategories\"}},[_vm._v(\"Filter font categories\")]),_vm._m(12),_c('p',[_vm._v(\" You can supply category names as an array or as a comma-seperated string. \")]),_c('div',{staticClass:\"example\"},[_c('select',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.fontCategories),expression:\"fontCategories\"}],on:{\"change\":function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return val}); _vm.fontCategories=$event.target.multiple ? $$selectedVal : $$selectedVal[0]}}},[_c('option',{attrs:{\"value\":\"all\"}},[_vm._v(\"All\")]),_c('option',{attrs:{\"value\":\"serif\"}},[_vm._v(\"Serif\")]),_c('option',{attrs:{\"value\":\"sans-serif\"}},[_vm._v(\"Sans-serif\")]),_c('option',{attrs:{\"value\":\"display\"}},[_vm._v(\"Display\")]),_c('option',{attrs:{\"value\":\"handwriting\"}},[_vm._v(\"Handwriting\")]),_c('option',{attrs:{\"value\":\"monospace\"}},[_vm._v(\"Monospace\")]),_c('option',{attrs:{\"value\":\"display, serif\"}},[_vm._v(\"display, serif\")]),_c('option',{domProps:{\"value\":['display', 'handwriting']}},[_vm._v(\" ['display', 'handwriting'] \")])]),_c('McFontpicker',{attrs:{\"font-categories\":_vm.fontCategories}})],1),_c('pre',[_vm._v(\"<select v-model=\\\"fontCategories\\\">\\n  <option value=\\\"all\\\">All</option>\\n  <option value=\\\"serif\\\">Serif</option>\\n  <option value=\\\"sans-serif\\\">Sans-serif</option>\\n  <option value=\\\"display\\\">Display</option>\\n  <option value=\\\"handwriting\\\">Handwriting</option>\\n  <option value=\\\"monospace\\\">Monospace</option>\\n  <option value=\\\"display, serif\\\">display, serif</option>\\n  <option :value=\\\"['display', 'handwriting']\\\">\\n    ['display', 'handwriting']\\n  </option>\\n</select>\\n<McFontpicker :font-categories=\\\"fontCategories\\\" />\\n    \")]),_c('h3',{attrs:{\"id\":\"manuallyadd\"}},[_vm._v(\"Manually add fonts\")]),_vm._m(13),_c('p',[_vm._v(\" You need to provide your own styling of the previews, how to create this is again beyond the scope of this document for now. Local fonts are also not auto-loaded, so depending on use case you may need to handle that too. \")]),_c('div',{staticClass:\"example\"},[_c('McFontpicker',{attrs:{\"google-fonts\":['Tinos', 'Open Sans'],\"local-fonts\":[\n          {\n            name: 'BickleyScript',\n            variants: [\n              {\n                italic: false,\n                weight: 400,\n              },\n              '1,400',\n            ],\n          },\n        ]},model:{value:(_vm.manuallyAddFontValue),callback:function ($$v) {_vm.manuallyAddFontValue=$$v},expression:\"manuallyAddFontValue\"}})],1),(typeof _vm.manuallyAddFontValue == 'string')?_c('p',[_vm._v(\" Current value: \"),_c('span',{style:({\n          fontFamily: _vm.manuallyAddFontValue,\n        })},[_vm._v(\" \"+_vm._s(_vm.manuallyAddFontValue)+\" \")])]):_vm._e(),_c('pre',{pre:true},[_vm._v(\"<McFontpicker\\n  v-model=\\\"manuallyAddFontValue\\\"\\n  :google-fonts=\\\"['Tinos', 'Open Sans']\\\"\\n  :local-fonts=\\\"[\\n    {\\n      name: 'BickleyScript',\\n      variants: [{ italic: false, weight: 400 }, '1,400' ],\\n    },\\n  ]\\\"\\n/>\\nCurrent value:\\n<span\\n  :style=\\\"{\\n    fontFamily: manuallyAddFontValue,\\n  }\\\"\\n>\\n  {{ manuallyAddFontValue }}\\n</span>\")])])\n}\nvar staticRenderFns = [function (){var _vm=this,_c=_vm._self._c;return _c('p',[_vm._v(\" See \"),_c('a',{attrs:{\"href\":\"https://github.com/Mikk3lRo/vue-fontpicker#readme\"}},[_vm._v(\"github repo\")]),_vm._v(\" or \"),_c('a',{attrs:{\"href\":\"https://www.npmjs.com/package/@mikk3lro/mc-fontpicker\"}},[_vm._v(\"npm package\")]),_vm._v(\" for installation instructions. \")])\n},function (){var _vm=this,_c=_vm._self._c;return _c('div',{attrs:{\"id\":\"toc\"}},[_c('h3',[_vm._v(\"TOC\")]),_c('ul',[_c('li',[_c('a',{attrs:{\"href\":\"#default\"}},[_vm._v(\"Default behaviour\")])]),_c('li',[_c('a',{attrs:{\"href\":\"#fontVariants\"}},[_vm._v(\"Font variants\")])]),_c('li',[_c('a',{attrs:{\"href\":\"#nomatches\"}},[_vm._v(\"No matches\")])]),_c('li',[_c('a',{attrs:{\"href\":\"#autoload\"}},[_vm._v(\"Autoload fonts\")])]),_c('li',[_c('a',{attrs:{\"href\":\"#manualload\"}},[_vm._v(\"Manually load fonts\")])]),_c('li',[_c('a',{attrs:{\"href\":\"#loadallvariants\"}},[_vm._v(\"Load all variants\")])]),_c('li',[_c('a',{attrs:{\"href\":\"#loadspecific\"}},[_vm._v(\"Load specific variants\")])]),_c('li',[_c('a',{attrs:{\"href\":\"#loaderonly\"}},[_vm._v(\"Font loader only\")])]),_c('li',[_c('a',{attrs:{\"href\":\"#choosegooglefonts\"}},[_vm._v(\"Choose google fonts\")])]),_c('li',[_c('a',{attrs:{\"href\":\"#fontcategories\"}},[_vm._v(\"Filter font categories\")])]),_c('li',[_c('a',{attrs:{\"href\":\"#manuallyadd\"}},[_vm._v(\"Manually add fonts\")])])])])\n},function (){var _vm=this,_c=_vm._self._c;return _c('p',[_vm._v(\" By default the fontpicker is \"),_c('strong',[_vm._v(\"only\")]),_vm._v(\" a picker. The selected font is not loaded. \")])\n},function (){var _vm=this,_c=_vm._self._c;return _c('p',[_vm._v(\" On mount and when a new font is selected the \"),_c('code',[_vm._v(\"fontVariants\")]),_vm._v(\" event is triggered. The main difference from the \"),_c('code',[_vm._v(\"input\")]),_vm._v(\" event is that it provides details about available variants of the current font. \")])\n},function (){var _vm=this,_c=_vm._self._c;return _c('p',[_vm._v(\" Customize the message when autocomplete yields no results using the \"),_c('code',[_vm._v(\"no-matches\")]),_vm._v(\"-prop. \")])\n},function (){var _vm=this,_c=_vm._self._c;return _c('p',[_vm._v(\"Automatically load fonts by setting the \"),_c('code',[_vm._v(\"auto-load\")]),_vm._v(\"-prop.\")])\n},function (){var _vm=this,_c=_vm._self._c;return _c('p',[_vm._v(\"Manually load fonts by setting the \"),_c('code',[_vm._v(\"load-fonts\")]),_vm._v(\"-prop.\")])\n},function (){var _vm=this,_c=_vm._self._c;return _c('p',[_vm._v(\" By default only the four most common variants (regular, bold, italic and bold italic) are loaded. You can make sure all variants are loaded by setting the \"),_c('code',[_vm._v(\"load-all-variants\")]),_vm._v(\" prop. \")])\n},function (){var _vm=this,_c=_vm._self._c;return _c('p',[_vm._v(\" The \"),_c('code',[_vm._v(\"load-fonts\")]),_vm._v(\"-prop can also accept an array of objects specifying fonts and variants. Example: \")])\n},function (){var _vm=this,_c=_vm._self._c;return _c('p',[_vm._v(\" Note that many fonts exist only in a few variants, so make sure the variants you request actually exist. For instance by filtering the values emitted from \"),_c('code',[_vm._v(\"fontVariants\")]),_vm._v(\" events. \")])\n},function (){var _vm=this,_c=_vm._self._c;return _c('p',[_vm._v(\" Set the \"),_c('code',[_vm._v(\"loader-only\")]),_vm._v(\"-prop to completely hide the font picker if you just need to load one or more fonts. \")])\n},function (){var _vm=this,_c=_vm._self._c;return _c('p',[_vm._v(\" You can limit the included google fonts using the \"),_c('code',[_vm._v(\"google-fonts\")]),_vm._v(\"-prop. \")])\n},function (){var _vm=this,_c=_vm._self._c;return _c('p',[_vm._v(\" You can filter the fonts by category using the \"),_c('code',[_vm._v(\"font-categories\")]),_vm._v(\"-prop. \")])\n},function (){var _vm=this,_c=_vm._self._c;return _c('p',[_vm._v(\"Manually add fonts using the \"),_c('code',[_vm._v(\"local-fonts\")]),_vm._v(\"-prop.\")])\n}]\n\nexport { render, staticRenderFns }","<template>\n  <div id=\"app\">\n    <h1>Simple google font picker</h1>\n    <p>\n      This is a live demo showing how to use @mikk3lro/mc-fontpicker for Vue.js.\n    </p>\n    <p>\n      See\n      <a href=\"https://github.com/Mikk3lRo/vue-fontpicker#readme\"\n        >github repo</a\n      >\n      or\n      <a href=\"https://www.npmjs.com/package/@mikk3lro/mc-fontpicker\"\n        >npm package</a\n      >\n      for installation instructions.\n    </p>\n\n    <div id=\"toc\">\n      <h3>TOC</h3>\n      <ul>\n        <li><a href=\"#default\">Default behaviour</a></li>\n        <li><a href=\"#fontVariants\">Font variants</a></li>\n        <li><a href=\"#nomatches\">No matches</a></li>\n        <li><a href=\"#autoload\">Autoload fonts</a></li>\n        <li><a href=\"#manualload\">Manually load fonts</a></li>\n        <li><a href=\"#loadallvariants\">Load all variants</a></li>\n        <li><a href=\"#loadspecific\">Load specific variants</a></li>\n        <li><a href=\"#loaderonly\">Font loader only</a></li>\n        <li><a href=\"#choosegooglefonts\">Choose google fonts</a></li>\n        <li><a href=\"#fontcategories\">Filter font categories</a></li>\n        <li><a href=\"#manuallyadd\">Manually add fonts</a></li>\n      </ul>\n    </div>\n\n    <h3 id=\"default\">Default behaviour</h3>\n    <p>\n      By default the fontpicker is <strong>only</strong> a picker. The selected\n      font is not loaded.\n    </p>\n    <div class=\"example\">\n      <McFontpicker v-model=\"font1\" />\n    </div>\n    <p>\n      Current value: <span :style=\"'font-family: ' + font1\">{{ font1 }}</span>\n    </p>\n    <pre v-pre>\n&lt;McFontpicker v-model=\"font1\" />\nCurrent value: &lt;span :style=\"'font-family: ' + font1\">{{ font1 }}&lt;/span>\n</pre\n    >\n\n    <h3 id=\"fontVariants\">Font variants</h3>\n    <p>\n      On mount and when a new font is selected the\n      <code>fontVariants</code> event is triggered. The main difference from the\n      <code>input</code> event is that it provides details about available\n      variants of the current font.\n    </p>\n    <div class=\"example\">\n      <McFontpicker\n        value=\"Oranienbaum\"\n        @fontVariants=\"i => (fontVariants = i)\"\n      />\n    </div>\n    <p>fontVariants:</p>\n    <pre>{{ fontVariants }}</pre>\n    <pre v-pre>\n&lt;McFontpicker @fontVariants=\"i => (fontVariants = i)\" />\nfontVariants: &lt;pre>{{ fontVariants }}&lt;/pre>\n</pre\n    >\n\n    <h3 id=\"nomatches\">No matches</h3>\n    <p>\n      Customize the message when autocomplete yields no results using the\n      <code>no-matches</code>-prop.\n    </p>\n    <div class=\"example\">\n      <McFontpicker ref=\"fontloader\" no-matches=\"I've got nothing\" />\n    </div>\n    <pre>&lt;McFontpicker no-matches=\"I've got nothing\" /></pre>\n\n    <h3 id=\"autoload\">Autoload fonts</h3>\n    <p>Automatically load fonts by setting the <code>auto-load</code>-prop.</p>\n    <div class=\"example\">\n      <McFontpicker auto-load v-model=\"font2\" />\n    </div>\n    <p>\n      Current value: <span :style=\"'font-family: ' + font2\">{{ font2 }}</span>\n    </p>\n    <pre v-pre>\n&lt;McFontpicker auto-load v-model=\"font2\" />\nCurrent value: &lt;span :style=\"'font-family: ' + font2\">{{ font2 }}&lt;/span>\n</pre\n    >\n\n    <h3 id=\"manualload\">Manually load fonts</h3>\n    <p>Manually load fonts by setting the <code>load-fonts</code>-prop.</p>\n    <p>Several fonts may be loaded by comma-separating the names.</p>\n    <div class=\"example\">\n      <McFontpicker :load-fonts=\"manuallyLoadFonts1\" />\n      <div style=\"text-align: center\">\n        <button @click=\"manuallyLoadFonts1 = 'Rubik Beastly'\">\n          Load <span style=\"font-family: Rubik Beastly\">\"Rubik Beastly\"</span>\n        </button>\n        <button @click=\"manuallyLoadFonts1 = 'Pacifico, Teko'\">\n          Load <span style=\"font-family: Pacifico\">\"Pacifico\"</span> and\n          <span style=\"font-family: Teko\">\"Teko\"</span>\n        </button>\n      </div>\n    </div>\n    <pre>\n&lt;McFontpicker :load-fonts=\"manuallyLoadFonts1\" />\n&lt;button @click=\"manuallyLoadFonts1 = 'Rubik Beastly'\">One font&lt;/button>\n&lt;button @click=\"manuallyLoadFonts1 = 'Pacifico, Teko'\">Two fonts&lt;/button>\n</pre\n    >\n\n    <h3 id=\"loadallvariants\">Load all variants</h3>\n    <p>\n      By default only the four most common variants (regular, bold, italic and\n      bold italic) are loaded. You can make sure all variants are loaded by\n      setting the <code>load-all-variants</code> prop.\n    </p>\n    <div class=\"example\">\n      <McFontpicker auto-load load-all-variants v-model=\"font3\" />\n    </div>\n    <p>\n      Current value: <span :style=\"'font-family: ' + font3\">{{ font3 }}</span>\n    </p>\n    <pre v-pre>\n&lt;McFontpicker auto-load load-all-variants v-model=\"font3\" />\nCurrent value: &lt;span :style=\"'font-family: ' + font3\">{{ font3 }}&lt;/span>\n</pre\n    >\n\n    <h3 id=\"loadspecific\">Load specific variants</h3>\n    <p>\n      The <code>load-fonts</code>-prop can also accept an array of objects\n      specifying fonts and variants. Example:\n    </p>\n    <pre>\n[\n  {\n    font: \"Open Sans\",\n    variants: [\n      { italic: false, weight: 400 },\n      { italic: true, weight: 400 },\n      { italic: false, weight: 700 },\n      { italic: true, weight: 700 },\n    ]\n  },\n  {\n    font: \"Rancho\",\n    variants: [\n      { italic: false, weight: 400 },\n    ]\n  }\n]</pre\n    >\n    <p>\n      Note that many fonts exist only in a few variants, so make sure the\n      variants you request actually exist. For instance by filtering the values\n      emitted from <code>fontVariants</code> events.\n    </p>\n    <p>\n      One use case could be loading only one variant - in this example whichever\n      is first (least bold):\n    </p>\n    <div class=\"example\">\n      <McFontpicker\n        :load-fonts=\"[thinnestFont]\"\n        @fontVariants=\"\n          v =>\n            (thinnestFont = {\n              font: v.font,\n              variants: v.variants.slice(0, 1),\n            })\n        \"\n      />\n    </div>\n    <p v-if=\"typeof thinnestFont == 'object'\">\n      Current value:\n      <span\n        :style=\"{\n          fontFamily: thinnestFont.font,\n          fontWeight: thinnestFont.variants[0].weight,\n        }\"\n      >\n        {{ thinnestFont.font }}\n      </span>\n    </p>\n    <pre v-pre>\n&lt;McFontpicker\n  :load-fonts=\"[thinnestFont]\"\n  @fontVariants=\"\n    v => (thinnestFont = {\n      font: v.font,\n      variants: v.variants.slice(0, 1),\n    })\n  \"\n/>\nCurrent value:\n&lt;span\n  :style=\"{\n    fontFamily: thinnestFont.font,\n    fontWeight: thinnestFont.variants[0].weight,\n  }\"\n>\n  {{ thinnestFont.font }}\n&lt;/span>\n</pre\n    >\n\n    <h3 id=\"loaderonly\">Font loader only</h3>\n    <p>\n      Set the <code>loader-only</code>-prop to completely hide the font picker\n      if you just need to load one or more fonts.\n    </p>\n    <div class=\"example\">\n      <McFontpicker :load-fonts=\"manuallyLoadFonts2\" loader-only />\n      <div style=\"text-align: center\">\n        <button @click=\"manuallyLoadFonts1 = 'Rancho'\">\n          Load <span style=\"font-family: Rancho\">\"Rancho\"</span>\n        </button>\n        <button @click=\"manuallyLoadFonts1 = 'Smooch, Risque'\">\n          Load <span style=\"font-family: Smooch\">\"Smooch\"</span> and\n          <span style=\"font-family: Risque\">\"Risque\"</span>\n        </button>\n      </div>\n    </div>\n    <pre>\n&lt;McFontpicker :load-fonts=\"manuallyLoadFonts2\" loader-only />\n&lt;button @click=\"manuallyLoadFonts2 = 'Rancho'\">Rancho&lt;/button>\n&lt;button @click=\"manuallyLoadFonts2 = 'Smooch, Risque'\">Two fonts&lt;/button>\n</pre\n    >\n\n    <h3 id=\"choosegooglefonts\">Choose google fonts</h3>\n    <p>\n      You can limit the included google fonts using the\n      <code>google-fonts</code>-prop.\n    </p>\n    <p>You can supply font names as an array or as a comma-seperated string.</p>\n    <p>\n      Do note that the previews are crazy inefficient if you only use a few\n      fonts - in that case you are probably better off recompiling all previews\n      - which is beyond the scope of this document at the moment.\n    </p>\n    <div class=\"example\">\n      <McFontpicker :google-fonts=\"['Tinos', 'Open Sans']\" />\n    </div>\n    <pre>&lt;McFontpicker :google-fonts=\"['Tinos', 'Open Sans']\" /></pre>\n\n    <h3 id=\"fontcategories\">Filter font categories</h3>\n    <p>\n      You can filter the fonts by category using the\n      <code>font-categories</code>-prop.\n    </p>\n    <p>\n      You can supply category names as an array or as a comma-seperated string.\n    </p>\n    <div class=\"example\">\n      <select v-model=\"fontCategories\">\n        <option value=\"all\">All</option>\n        <option value=\"serif\">Serif</option>\n        <option value=\"sans-serif\">Sans-serif</option>\n        <option value=\"display\">Display</option>\n        <option value=\"handwriting\">Handwriting</option>\n        <option value=\"monospace\">Monospace</option>\n        <option value=\"display, serif\">display, serif</option>\n        <option :value=\"['display', 'handwriting']\">\n          ['display', 'handwriting']\n        </option>\n      </select>\n      <McFontpicker :font-categories=\"fontCategories\" />\n    </div>\n    <pre>\n&lt;select v-model=\"fontCategories\">\n  &lt;option value=\"all\">All&lt;/option>\n  &lt;option value=\"serif\">Serif&lt;/option>\n  &lt;option value=\"sans-serif\">Sans-serif&lt;/option>\n  &lt;option value=\"display\">Display&lt;/option>\n  &lt;option value=\"handwriting\">Handwriting&lt;/option>\n  &lt;option value=\"monospace\">Monospace&lt;/option>\n  &lt;option value=\"display, serif\">display, serif&lt;/option>\n  &lt;option :value=\"['display', 'handwriting']\">\n    ['display', 'handwriting']\n  &lt;/option>\n&lt;/select>\n&lt;McFontpicker :font-categories=\"fontCategories\" />\n    </pre>\n\n    <h3 id=\"manuallyadd\">Manually add fonts</h3>\n    <p>Manually add fonts using the <code>local-fonts</code>-prop.</p>\n    <p>\n      You need to provide your own styling of the previews, how to create this\n      is again beyond the scope of this document for now. Local fonts are also\n      not auto-loaded, so depending on use case you may need to handle that too.\n    </p>\n    <div class=\"example\">\n      <McFontpicker\n        v-model=\"manuallyAddFontValue\"\n        :google-fonts=\"['Tinos', 'Open Sans']\"\n        :local-fonts=\"[\n          {\n            name: 'BickleyScript',\n            variants: [\n              {\n                italic: false,\n                weight: 400,\n              },\n              '1,400',\n            ],\n          },\n        ]\"\n      />\n    </div>\n    <p v-if=\"typeof manuallyAddFontValue == 'string'\">\n      Current value:\n      <span\n        :style=\"{\n          fontFamily: manuallyAddFontValue,\n        }\"\n      >\n        {{ manuallyAddFontValue }}\n      </span>\n    </p>\n    <pre v-pre>\n&lt;McFontpicker\n  v-model=\"manuallyAddFontValue\"\n  :google-fonts=\"['Tinos', 'Open Sans']\"\n  :local-fonts=\"[\n    {\n      name: 'BickleyScript',\n      variants: [{ italic: false, weight: 400 }, '1,400' ],\n    },\n  ]\"\n/>\nCurrent value:\n&lt;span\n  :style=\"{\n    fontFamily: manuallyAddFontValue,\n  }\"\n>\n  {{ manuallyAddFontValue }}\n&lt;/span></pre\n    >\n  </div>\n</template>\n\n<script>\nimport McFontpicker from './components/index'\nimport '../manual-fonts-test/font-previews.css'\n\nexport default {\n  name: 'App',\n  components: {\n    McFontpicker,\n  },\n  data() {\n    return {\n      font1: 'Tenor Sans',\n      font2: 'Open Sans',\n      font3: 'Open Sans',\n      fontVariants: null,\n      fontCategories: 'sans-serif',\n      manuallyLoadFonts1: '',\n      manuallyLoadFonts2: '',\n      thinnestFont: '',\n      manuallyAddFontValue: 'Tinos',\n    }\n  },\n}\n</script>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  color: #2c3e50;\n  margin: 1em auto 160px auto;\n  max-width: 600px;\n  text-align: left;\n  padding: 1em 0.5em;\n  line-height: 1.6em;\n}\n* {\n  vertical-align: baseline;\n  box-sizing: border-box;\n}\nbutton {\n  height: 3em;\n  line-height: 1em;\n  padding: 0.5em 1em;\n  box-sizing: border-box;\n  margin: 0.5em;\n  width: 20em;\n}\na {\n  color: #379bff;\n  text-decoration: none;\n}\na:hover {\n  text-decoration: underline;\n}\n#toc {\n  box-shadow: 0px 0px 4px rgba(0, 0, 0, 0.3);\n  position: fixed;\n  width: 220px;\n  top: 40px;\n  left: calc(50% - 550px);\n  padding: 1em 0;\n}\n#toc li {\n  padding: 0.2em 0.5em;\n  margin: 0;\n  text-align: center;\n}\n#toc h3 {\n  border-bottom: 1px solid #888;\n  margin: 0 0 0.5em 0;\n  text-align: center;\n}\n#toc ul {\n  margin: 0;\n  padding: 0;\n  list-style: none;\n}\n@media screen and (max-width: 1100px) {\n  #app {\n    margin-left: 230px;\n    max-width: none;\n  }\n  #toc {\n    left: 0;\n    top: 0;\n    bottom: 0;\n    transform: none;\n  }\n}\n@media screen and (max-width: 600px) {\n  #app {\n    margin-left: auto;\n  }\n  #toc {\n    display: none;\n  }\n}\n\nh3 {\n  margin-top: 50px;\n  border-bottom: 3px solid #123456;\n}\n\nli {\n  margin: 1em 0;\n}\n\n.example {\n  text-align: center;\n  position: relative;\n}\n.example.overflow {\n  overflow: scroll;\n  padding: 1em 0;\n  border: 1px solid;\n}\npre,\ncode {\n  text-align: left;\n  background: #eee;\n}\ntable {\n  margin: 0 auto;\n  vertical-align: top;\n  table-layout: fixed;\n}\ntable th,\ntable td {\n  vertical-align: top;\n  padding: 0.5em;\n  width: 45%;\n}\ntable td:nth-child(2) {\n  width: 10%;\n  text-align: center;\n}\ntable th {\n  text-align: right;\n  font-weight: normal;\n}\ntable td {\n  text-align: left;\n}\ntable code {\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\ntable pre,\ntable code {\n  margin-top: 3px;\n  display: inline-block;\n  max-width: 100%;\n}\n.squarePreview {\n  width: 100px;\n  height: 2em;\n}\n.inputPreview {\n  border: none;\n  padding: 0;\n  border-radius: 1em;\n  height: 2em;\n  text-align: center;\n  width: 100px;\n}\npre {\n  padding: 0.5em;\n  overflow-x: auto;\n}\n.initial-current {\n  width: 100%;\n}\n.initial-current pre {\n  width: 100%;\n  margin: 0;\n}\n@media screen and (max-width: 500px) {\n  .initial-current thead {\n    display: none;\n  }\n  .initial-current th,\n  .initial-current td,\n  .initial-current tr {\n    width: auto !important;\n    display: block;\n    text-align: center;\n  }\n  .initial-current th:first-child::before {\n    content: 'Initial: ';\n    display: block;\n  }\n  .initial-current td:last-child::before {\n    content: 'Current: ';\n    display: block;\n  }\n  .initial-current td:last-child {\n    border-bottom: 1px solid #333;\n  }\n}\n</style>\n","import mod from \"-!../node_modules/cache-loader/dist/cjs.js??ref--13-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--1-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../node_modules/cache-loader/dist/cjs.js??ref--13-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--1-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./App.vue?vue&type=template&id=6a90af6c\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\nimport style0 from \"./App.vue?vue&type=style&index=0&id=6a90af6c&prod&lang=css\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import Vue from 'vue'\nimport App from './App.vue'\n\nVue.config.productionTip = false\n\nnew Vue({\n  render: h => h(App),\n}).$mount('#app')\n","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./McFontpicker.vue?vue&type=style&index=0&id=65797bfc&prod&lang=css\"","export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--1-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=0&id=6a90af6c&prod&lang=css\"","var render = function render(){var _vm=this,_c=_vm._self._c;return (!_vm.loaderOnly)?_c('div',{class:_vm.outerClasses},[_c('input',{ref:\"input\",staticClass:\"mcfontpicker__search\",attrs:{\"type\":\"text\"},domProps:{\"value\":_vm.searchContent},on:{\"input\":_vm.searchChanged,\"focus\":_vm.onFocus,\"blur\":_vm.hide,\"keydown\":_vm.onKeyDown}}),_c('div',{ref:\"preview\",class:_vm.previewClasses}),_c('div',{ref:\"popout\",class:_vm.popoutClasses,attrs:{\"tabindex\":\"-1\"},on:{\"mousedown\":_vm.cancelBlur}},[_vm._l((_vm.matchingFonts),function(font,i){return _c('div',{key:font.sane,class:'mcfontpicker__option' + (i == _vm.selectedFontIndex ? ' selected' : ''),on:{\"mousedown\":e => _vm.onClick(font),\"mousemove\":() => (_vm.selectedFontIndex = i)}},[_c('div',{class:'font-preview-' + font.sane})])}),(_vm.matchingFonts.length == 0)?_c('div',{staticClass:\"mcfontpicker__nomatches\"},[_vm._v(\" \"+_vm._s(_vm.noMatches)+\" \")]):_vm._e()],2)]):_vm._e()\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div :class=\"outerClasses\" v-if=\"!loaderOnly\">\n    <input\n      ref=\"input\"\n      type=\"text\"\n      @input=\"searchChanged\"\n      @focus=\"onFocus\"\n      @blur=\"hide\"\n      @keydown=\"onKeyDown\"\n      class=\"mcfontpicker__search\"\n      :value=\"searchContent\"\n    />\n    <div ref=\"preview\" :class=\"previewClasses\"></div>\n    <div\n      ref=\"popout\"\n      tabindex=\"-1\"\n      :class=\"popoutClasses\"\n      @mousedown=\"cancelBlur\"\n    >\n      <div\n        :class=\"\n          'mcfontpicker__option' + (i == selectedFontIndex ? ' selected' : '')\n        \"\n        v-for=\"(font, i) in matchingFonts\"\n        v-bind:key=\"font.sane\"\n        @mousedown=\"e => onClick(font)\"\n        @mousemove=\"() => (selectedFontIndex = i)\"\n      >\n        <div :class=\"'font-preview-' + font.sane\" />\n      </div>\n      <div v-if=\"matchingFonts.length == 0\" class=\"mcfontpicker__nomatches\">\n        {{ noMatches }}\n      </div>\n    </div>\n    <!--pre>{{ current }}</pre-->\n  </div>\n</template>\n\n<script>\nimport fonts from '../../font-preview/fontInfo.json'\nimport '../../font-preview/font-previews.css'\n\nexport default {\n  props: {\n    value: {\n      type: [String],\n      default: 'Open Sans',\n    },\n    noMatches: {\n      type: [String],\n      default: 'No matches',\n    },\n    autoLoad: {\n      type: Boolean,\n      default: false,\n    },\n    loaderOnly: {\n      type: Boolean,\n      default: false,\n    },\n    loadAllVariants: {\n      type: Boolean,\n      default: false,\n    },\n    loadFonts: {\n      type: [Array, String],\n      default: '',\n    },\n    googleFonts: {\n      type: [Array, String],\n      default: () => 'all',\n    },\n    fontCategories: {\n      type: [Array, String],\n      default: () => 'all',\n    },\n    localFonts: {\n      type: Array,\n      default: () => [],\n    },\n  },\n  data() {\n    return {\n      focused: false,\n      allGoogleFonts: [],\n      typedSearch: '',\n      searchContent: '',\n      selectedFontIndex: -1,\n      current: {\n        name: 'Open Sans',\n        sane: 'open-sans',\n      },\n    }\n  },\n  watch: {\n    value(newValue) {\n      this.handleNewValue(newValue)\n    },\n    loadFonts(newValue) {\n      this.handleLoadFont()\n    },\n    fontCategories(newValue) {\n      this.handleNewValue(this.current.name)\n    },\n  },\n  computed: {\n    outerClasses() {\n      let ret = [\n        'mcfontpicker', //\n      ]\n      return ret\n    },\n    popoutClasses() {\n      let ret = ['mcfontpicker__popout']\n      if (this.focused) {\n        ret.push('mcfontpicker__active')\n      }\n      return ret\n    },\n    previewClasses() {\n      let ret = ['mcfontpicker__preview']\n      ret.push('font-preview-' + this.current.sane)\n      return ret\n    },\n    fonts() {\n      let activeFonts\n\n      if (this.googleFonts == 'all') {\n        activeFonts = [...this.allGoogleFonts]\n      } else if (typeof this.googleFonts === 'string') {\n        let fontNames = this.googleFonts.split(',').map(v => v.toLowerCase())\n        activeFonts = [...this.allGoogleFonts.filter(a => fontNames.includes(a.cased))]\n      } else {\n        let fontNames = this.googleFonts.map(v => v.toLowerCase())\n        activeFonts = [...this.allGoogleFonts.filter(a => fontNames.includes(a.cased))]\n      }\n\n      for (var i in this.localFonts) {\n        activeFonts.push({\n          name: this.localFonts[i].name,\n          cased: this.localFonts[i].name.toLowerCase(),\n          sane: this.localFonts[i].name\n            .replaceAll(' ', '_')\n            .replaceAll(/[^a-zA-Z0-9-_]/g, '')\n            .toLowerCase(),\n          variants: this.localFonts[i].variants.map(v => {\n            if (typeof v === 'string') {\n              return v\n            }\n            return (v.italic ? '1' : '0') + ',' + v.weight\n          }),\n        })\n      }\n\n      let activeFontsInCategory\n      if (this.fontCategories == 'all') {\n        activeFontsInCategory = [...activeFonts]\n      } else if (typeof this.fontCategories === 'string') {\n        let fontCategories = this.fontCategories.split(',').map(v => v.trim().toLowerCase())\n        activeFontsInCategory = [...this.allGoogleFonts.filter(a => fontCategories.includes(a.category))]\n      } else {\n        let fontCategories = this.fontCategories.map(v => v.toLowerCase())\n        activeFontsInCategory = [...this.allGoogleFonts.filter(a => fontCategories.includes(a.category))]\n      }\n\n      return activeFontsInCategory\n    },\n    matchingFonts() {\n      let search = this.typedSearch.toLowerCase().trim()\n      return this.fonts.filter(a => a.cased.includes(search))\n    },\n  },\n  mounted() {\n    let ifonts = []\n    for (var i in fonts) {\n      let font = fonts[i]\n      font.cased = font.name.toLowerCase()\n      ifonts.push(font)\n    }\n    this.allGoogleFonts = ifonts\n    this.handleNewValue(this.value)\n\n    this.handleLoadFont()\n  },\n  methods: {\n    cancelBlur(e) {\n      e.preventDefault()\n    },\n    handleNewValue(newValue) {\n      this.setCurrentByName(newValue)\n      this.typedSearch = this.searchContent = newValue\n    },\n    handleLoadFont() {\n      if (typeof this.loadFonts === 'string') {\n        let fontNames = this.loadFonts.split(',')\n        for (var i in fontNames) {\n          this.loadFontByName(fontNames[i])\n        }\n      } else {\n        for (i in this.loadFonts) {\n          let font = this.loadFonts[i]\n          if (!font.font) {\n            continue\n          }\n          if (font.variants) {\n            this.loadFontByName(\n              font.font,\n              font.variants.map(v => (v.italic ? '1' : '0') + ',' + v.weight),\n            )\n          } else {\n            this.loadFontByName(font.font)\n          }\n        }\n      }\n    },\n    searchChanged(e) {\n      this.$refs['popout'].scrollTop = 0\n      this.selectedFontIndex = -1\n      let isLonger = this.typedSearch.length < e.target.value.length\n      this.typedSearch = e.target.value\n\n      if (!isLonger) {\n        //Don't autocomplete when using backspace\n        this.searchContent = e.target.value\n        return\n      }\n\n      let cased = this.typedSearch.toLowerCase()\n\n      let matches = this.fonts.filter(a => a.cased.startsWith(cased))\n      if (matches.length) {\n        let firstMatch = matches[0].name\n        this.searchContent = firstMatch\n        e.target.value = firstMatch\n        this.setInputSelection(\n          e.target,\n          this.typedSearch.length,\n          this.searchContent.length,\n        )\n      } else {\n        this.searchContent = e.target.value\n      }\n    },\n    setInputSelection(input, startPos, endPos) {\n      if (input.setSelectionRange) {\n        input.setSelectionRange(startPos, endPos)\n      } else if (input.createTextRange) {\n        var range = input.createTextRange()\n        range.collapse(true)\n        range.moveEnd('character', endPos)\n        range.moveStart('character', startPos)\n        range.select()\n      }\n    },\n\n    onKeyDown(e) {\n      if (e.key && e.key === 'Enter') {\n        let cased = this.searchContent.toLowerCase()\n        let preciseMatches = this.fonts.filter(a => a.cased == cased)\n        if (this.selectedFontIndex > -1) {\n          this.setCurrent(this.matchingFonts[this.selectedFontIndex])\n        } else if (preciseMatches.length == 1) {\n          this.setCurrent(preciseMatches[0])\n        } else if (this.matchingFonts.length > 0) {\n          this.setCurrent(this.matchingFonts[0])\n        } else {\n          this.setCurrent(this.current)\n        }\n      } else if (e.key && e.key === 'ArrowDown') {\n        e.preventDefault()\n        if (this.selectedFontIndex < this.matchingFonts.length - 1) {\n          this.searchContent = this.typedSearch\n          this.selectedFontIndex++\n          this.showSelectedFont()\n        }\n      } else if (e.key && e.key === 'ArrowUp') {\n        e.preventDefault()\n        if (this.selectedFontIndex > 0) {\n          this.searchContent = this.typedSearch\n          this.selectedFontIndex--\n          this.showSelectedFont()\n        }\n      }\n    },\n\n    showSelectedFont(why = 'key') {\n      let selectedFont = this.matchingFonts[this.selectedFontIndex]\n      let font = this.$refs['popout'].querySelector(\n        '.font-preview-' + selectedFont.sane,\n      )\n      if (font) {\n        let fontTop = font.offsetTop\n        let fontBottom = fontTop + font.offsetHeight\n        let popTop = this.$refs['popout'].scrollTop\n        let popBottom = popTop + this.$refs['popout'].clientHeight\n        if (why == 'opening' || fontTop <= popTop) {\n          this.$refs['popout'].scrollTop = fontTop\n        } else if (fontBottom >= popBottom) {\n          this.$refs['popout'].scrollTop =\n            fontBottom - this.$refs['popout'].clientHeight - 1\n        }\n      }\n    },\n\n    onFocus() {\n      this.$refs['input'].select()\n      this.typedSearch = ''\n      this.show()\n    },\n    onClick(font) {\n      this.setCurrent(font)\n      this.hide()\n    },\n    show() {\n      this.focused = true\n      setTimeout(() => {\n        for (var i in this.matchingFonts) {\n          if (this.matchingFonts[i].name == this.current.name) {\n            this.selectedFontIndex = i\n            break\n          }\n        }\n        this.searchContent = this.current.name\n        this.showSelectedFont('opening')\n      }, 1)\n    },\n    hide() {\n      this.focused = false\n    },\n    getFontByName(name) {\n      for (var i in this.fonts) {\n        if (this.fonts[i].name == name.trim()) {\n          return this.fonts[i]\n        }\n      }\n      return null\n    },\n    setCurrent(newValue) {\n      this.current = newValue\n      this.typedSearch = this.searchContent = this.current.name\n      this.$emit('input', this.current.name)\n      this.$refs['input'].blur()\n      this.autoLoadFont()\n      this.emitFontVariants()\n    },\n    setCurrentByName(newName) {\n      let prev = this.current\n      let font = this.getFontByName(newName)\n      if (font) {\n        this.current = font\n        this.autoLoadFont()\n        this.emitFontVariants()\n      } else if (this.fonts.length > 0) {\n        this.current = this.fonts[0]\n        this.autoLoadFont()\n        this.emitFontVariants()\n      }\n      if (prev !== this.current) {\n        this.$emit('input', this.current.name)\n      }\n    },\n    emitFontVariants() {\n      this.$emit('fontVariants', {\n        font: this.current.name,\n        variants: this.current.variants.map(v => {\n          return {\n            italic: v.substring(0, 2) == '1,',\n            weight: v.substring(2),\n          }\n        }),\n      })\n    },\n    autoLoadFont(font) {\n      if (this.autoLoad) {\n        this.loadFontFromObject(this.current)\n      }\n    },\n    loadFontByName(font, variants) {\n      if (font === '') {\n        return\n      }\n      let origFont = font\n      if (typeof font == 'string') {\n        font = this.getFontByName(font)\n      }\n      if (\n        font == null ||\n        typeof font != 'object' ||\n        typeof font.sane != 'string'\n      ) {\n        console.error('Unknown font', origFont)\n      } else if (font.variants.length < 1) {\n        console.error('No valid variants of font', variants)\n      } else {\n        this.loadFontFromObject(font, variants)\n      }\n    },\n    getFourVariants(variants) {\n      let regularWeights = variants\n        .filter(v => v.substring(0, 2) == '0,')\n        .map(v => parseInt(v.substring(2)))\n        .sort((a, b) => a - b)\n      let italicWeights = variants\n        .filter(v => v.substring(0, 2) == '1,')\n        .map(v => parseInt(v.substring(2)))\n        .sort((a, b) => a - b)\n\n      let fourFonts = {}\n\n      // Best regular font is whatever is closest to 400 (but use 300 if only 300 and 500 available)\n      fourFonts.regular = regularWeights\n        .sort((a, b) => Math.abs(399 - a) - Math.abs(399 - b))\n        .shift()\n\n      // Best bold font is whatever is larger than regular, and closest to 700\n      fourFonts.bold = regularWeights\n        .filter(v => v > fourFonts.regular)\n        .sort((a, b) => Math.abs(700 - a) - Math.abs(700 - b))\n        .shift()\n\n      // Same for italics\n      fourFonts.italic = italicWeights\n        .sort((a, b) => Math.abs(399 - a) - Math.abs(399 - b))\n        .shift()\n      fourFonts.boldItalic = italicWeights\n        .filter(v => v > fourFonts.italic)\n        .sort((a, b) => Math.abs(700 - a) - Math.abs(700 - b))\n        .shift()\n\n      let loadFonts = []\n      if (fourFonts.regular) {\n        loadFonts.push('0,' + fourFonts.regular)\n      }\n      if (fourFonts.bold) {\n        loadFonts.push('0,' + fourFonts.bold)\n      }\n      if (fourFonts.italic) {\n        loadFonts.push('1,' + fourFonts.italic)\n      }\n      if (fourFonts.boldItalic) {\n        loadFonts.push('1,' + fourFonts.boldItalic)\n      }\n      return loadFonts\n    },\n    loadFontFromObject(font, variants) {\n      if (variants) {\n        variants = font.variants.filter(v => variants.includes(v))\n      } else if (this.loadAllVariants) {\n        variants = font.variants\n      } else {\n        variants = this.getFourVariants(font.variants)\n      }\n\n      let cssId = 'google-font-' + font.sane\n      let cssIdAll = cssId + '-all'\n      if (variants.length == font.variants.length) {\n        cssId = cssIdAll\n      } else {\n        cssId +=\n          '-' +\n          variants\n            .sort()\n            .join('-')\n            .replaceAll('1,', 'i')\n            .replaceAll('0,', '')\n      }\n\n      let existing = document.getElementById(cssId)\n      let existingAll = document.getElementById(cssIdAll)\n      if (!existing && !existingAll) {\n        var link = document.createElement('link')\n        link.rel = 'stylesheet'\n        link.id = cssId\n        link.href =\n          'https://fonts.googleapis.com/css2?family=' +\n          font.name +\n          ':ital,wght@' +\n          variants.sort().join(';') +\n          '&display=swap'\n        document.getElementsByTagName('head')[0].appendChild(link)\n      }\n    },\n  },\n}\n</script>\n\n<style>\n.mcfontpicker,\n.mcfontpicker * {\n  box-sizing: border-box;\n}\n.mcfontpicker {\n  border: 1px solid;\n  display: block;\n  position: relative;\n}\n.mcfontpicker__search {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  opacity: 0;\n  padding: 0 10px;\n  cursor: pointer;\n  font-size: 16px;\n}\n.mcfontpicker__search:focus {\n  cursor: text;\n  opacity: 1;\n}\n.mcfontpicker__popout {\n  position: absolute;\n  top: 100%;\n  left: 0;\n  width: 100%;\n  border: 1px solid;\n  max-height: calc(12em + 1px);\n  overflow-y: auto;\n  overflow-x: hidden;\n  z-index: 2;\n  background: #fff;\n  opacity: 0;\n  transform: scaleY(0.001);\n}\n.mcfontpicker__popout.mcfontpicker__active {\n  opacity: 1;\n  transform: scale(1);\n}\n.mcfontpicker__popout .mcfontpicker__option {\n  background: #fff;\n}\n.mcfontpicker__popout .mcfontpicker__option.selected {\n  background: #6789ab;\n}\n.mcfontpicker__nomatches {\n  height: 2em;\n  line-height: 2em;\n  background: #fff;\n  text-align: center;\n  color: #888;\n}\n</style>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./McFontpicker.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./McFontpicker.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./McFontpicker.vue?vue&type=template&id=65797bfc\"\nimport script from \"./McFontpicker.vue?vue&type=script&lang=js\"\nexport * from \"./McFontpicker.vue?vue&type=script&lang=js\"\nimport style0 from \"./McFontpicker.vue?vue&type=style&index=0&id=65797bfc&prod&lang=css\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}